name: Build and Upload Conda Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  BUILD_NAME: fly_conda_build_environment

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # arch: [x86_64]
        # cuda_compiler_version: [none, 11.8]
        # double: [yes, no]
        # mpi: [openmpi, nompi]
        include:
          - os: ubuntu-latest
            target_platform: linux-64
            cuda_compiler_version: [none, 11.8]
            double: [yes, no]
            mpi: [openmpi, nompi]
          # - os: macos-latest
          #   target_platform: osx-64
            # cuda_compiler_version: [none]
            # double: [yes, no]
            # mpi: [openmpi, nompi]
        # exclude:
        #   - os: macos-latest
        #     cuda_compiler_version: 11.8
        #   - os: macos-latest
        #     arch: arm64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: 3.11
          channels: anaconda, conda-forge

      # - name: Initialize Conda (Linux)
      #   if: matrix.os == 'ubuntu-latest'
      #   shell: bash
      #   run: conda init bash

      # - name: Initialize Conda (Mac)
      #   if: matrix.os == 'macos-latest'
      #   shell: bash -el {0}
      #   run: conda init bash

      # - name: Initialize Conda (Windows)
      #   if: matrix.os == 'windows-latest'
      #   shell: powershell
      #   run: conda init powershell

      - name: Install conda-build
        run: conda install conda-build anaconda-client

      - run: conda info
      - run: conda list
      - run: conda config --show

      - name: Build the package
        # if: matrix.os == 'ubuntu-latest'
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate base
          conda info
          conda list
          conda-build recipe --output-folder ${{ github.workspace }}/conda-bld

      # - name: Build the package (Win)
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     conda build . --output-folder ${{ github.workspace }}/conda-bld

      - name: Upload package to Anaconda.org (Linux)
        if: matrix.os == 'ubuntu-latest'
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate base
          anaconda upload ${{ github.workspace }}/conda-bld/linux-64/*.tar.bz2 -u firesimulations
        shell: bash

      - name: Upload package to Anaconda.org (Mac)
        if: matrix.os == 'macos-latest'
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate base
          anaconda upload ${{ github.workspace }}/conda-bld/osx-64/*.tar.bz2 -u firesimulations
        shell: bash

      # - name: Dump job context
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     echo "anaconda upload %GITHUB_WORKSPACE%\\conda-bld\\win-64\\*.tar.bz2 -u firesimulations"
      #     echo "anaconda upload ${{ github.workspace }}\\conda-bld\\win-64\\*.tar.bz2 -u firesimulations"
      #     echo "${{ github.workspace }}"
      #   shell: powershell

      # - name: Upload package to Anaconda.org (Windows)
      #   if: matrix.os == 'windows-latest'
      #   env:
      #     ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
      #   run: |
      #     anaconda upload ${{ github.workspace }}\\conda-bld\\win-64\\*.tar.bz2 -u firesimulations
      #   shell: powershell
